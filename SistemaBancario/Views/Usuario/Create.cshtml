@model SistemaBancario.Models.Usuarios
@using SistemaBancario.Models.Enums

@{
    ViewBag.Title = "Create";
}

<script src="@Url.Content("~/SistemaBancario/Scripts/Cadastro.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="text-center">
        <h1>Crie sua Conta!</h1>
        <br />
        <div class="text-center">
            <img src="~/img/PngItem_2018101.png" class="rounded" width="500">
        </div>
    </div>
    <hr />


    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Nome, "Nome:")
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Sobrenome, "Sobrenome:")
                @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 col-md-offset-0">
                @Html.LabelFor(model => model.DataDeNascimento, "Data de Nascimento:")
                @Html.EditorFor(model => model.DataDeNascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataDeNascimento, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-4">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="flexRadioDefault" id="RadioMasculino">
                    @Html.LabelFor(model => model.Sexo, "Masculino")
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="flexRadioDefault" id="RadioFeminino" checked>
                    @Html.LabelFor(model => model.Sexo, "Feminino")
                </div>
            </div>


            <div class="col-md-2">

                @Html.DropDownListFor(model => model.EstadoCivil,
                         new SelectList(Enum.GetValues(typeof(EstadoCivil))),
                         "Estado Civil")
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.AtividadeAtual,
                        new SelectList(Enum.GetValues(typeof(AtividadeAtual))),
                        "Atividade Atual")

            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.Telefones.DDD)
                @Html.EditorFor(model => model.Telefones.DDD, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefones.DDD, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Telefones.Telefone)
                @Html.EditorFor(model => model.Telefones.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefones.Telefone, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="row">
            <div class="col-md-5">
                @Html.LabelFor(model => model.Email, "Email:")
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5 ">
                @Html.LabelFor(model => model.Email, "Confirmar E-Mail")
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-5">
                @Html.LabelFor(model => model.Senha, "Senha:")
                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5 ">
                @Html.LabelFor(model => model.Senha, "Confirmar Senha")
                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />

        <div>
            <div class="btn-group" data-toggle="buttons">
                <label class="btn btn-primary active">
                    <input type="radio" name="options" id="PessoaFisica"> Pessoa Física
                </label>
                <label class="btn btn-primary active">
                    <input type="radio" name="options" id="PessoaJuridica"> Pessoa Juridica
                </label>
            </div>
            <br /> <br />
            <div>
                @Html.LabelFor(model => model.CPF)
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </div>
            <div>
                <div class="row">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.CNPJ)
                        @Html.EditorFor(model => model.CNPJ, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CNPJ, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.NomeEmpresa, "Nome da Empresa")
                        @Html.EditorFor(model => model.NomeEmpresa, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NomeEmpresa, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <hr />

        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Pais, "País")
                @Html.EditorFor(model => model.Enderecos.Pais, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Pais, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Estado)
                @Html.EditorFor(model => model.Enderecos.Estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Estado, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Cidade)
                @Html.EditorFor(model => model.Enderecos.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Cidade, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Bairro)
                @Html.EditorFor(model => model.Enderecos.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Bairro, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Rua, "Logradouro")
                @Html.EditorFor(model => model.Enderecos.Rua, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Rua, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Numero)
                @Html.EditorFor(model => model.Enderecos.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Numero, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Complemento)
                @Html.EditorFor(model => model.Enderecos.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Complemento, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-check" >
            <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
            <label class="form-check-label" for="flexCheckDefault">
                Você aceita os termos e condições?
            </label>
            <br />
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salvar" class="btn btn-default"/>
                </div>
            </div>
            <hr />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

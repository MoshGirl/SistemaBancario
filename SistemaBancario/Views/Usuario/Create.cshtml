@model SistemaBancario.Models.Usuarios
@using SistemaBancario.Models.Enums


@{
    ViewBag.Title = "Create";
}

<script src="@Url.Content("~/SistemaBancario/Scripts/Cadastro.js")" type="text/javascript"></script>
<script type="text/javascript" src="inputmask/inputmask.js"></script>

<form action="/Usuario/Create?class=Cadastro" onsubmit="return comparaSenha(this)" method="post" novalidate="novalidate" id="cadastrando">
   
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6">
                <h1 style="text-emphasis-style:sesame">Crie sua Conta!</h1>
                <div class="col-md-6">
                    <img src="~/img/MisterBeanCadastro.png" class="rounded" width="200">
                </div>
            </div>
        </div>

    </div>

    <hr />

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Nome, "Nome:")
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Sobrenome, "Sobrenome:")
                @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 col-md-offset-0">
                @Html.LabelFor(model => model.DataDeNascimento, "Data de Nascimento:", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.DataDeNascimento, new { htmlAttributes = new { @class = "form-control", placeholder = "00/00/0000", @id = "data" } })
                @Html.ValidationMessageFor(model => model.DataDeNascimento, "", new { @class = "text-danger" })

            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-4">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="flexRadioDefault" id="RadioMasculino">
                    @Html.LabelFor(model => model.Sexo, "Masculino")
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="flexRadioDefault" id="RadioFeminino" checked>
                    @Html.LabelFor(model => model.Sexo, "Feminino")
                </div>
            </div>


            <div class="col-md-2">

                @Html.DropDownListFor(model => model.EstadoCivil,
   new SelectList(Enum.GetValues(typeof(EstadoCivil))),
   "Estado Civil")
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.AtividadeAtual,
  new SelectList(Enum.GetValues(typeof(AtividadeAtual))),
  "Atividade Atual")

            </div>
            <div class="col-md-1" id="DDD">
                @Html.LabelFor(model => model.Telefones.DDD)
                @Html.EditorFor(model => model.Telefones.DDD, new { htmlAttributes = new { @class = "form-control", placeholder = "(00)", @id = "ddd" } })

                @Html.ValidationMessageFor(model => model.Telefones.DDD, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Telefones.Telefone)
                @Html.EditorFor(model => model.Telefones.Telefone, new { htmlAttributes = new { @class = "form-control", placeholder = "00000-0000", @id = "telefone" } })
                @Html.ValidationMessageFor(model => model.Telefones.Telefone, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="row">
            <div class="col-md-5">
                @Html.LabelFor(model => model.Email, "Email:")
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5 ">
                @Html.LabelFor(model => model.Email, "Confirmar E-Mail")
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-5">
                @Html.LabelFor(model => model.Senha, "Senha:")
                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", @type = "password", @name = "Senha1" } })
                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5 ">
                <label>Confirmar Senha:</label>
                <input type="password" class="form-control" id="confirmarSenha" name="confirmarSenha" required />

            </div>
        </div>
        <hr />
        <div id="pessoas">

            <p>
                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#pessoaFisica" aria-expanded="false" aria-controls="pessoaFisica" onclick="pessoaJuridica.collapse('hide') ">
                    Pessoa Física
                </button>
                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#pessoaJuridica" aria-expanded="false" aria-controls="pessoaJuridica">
                    Pessoa Juridica
                </button>
            </p>

            <div class="collapse" id="pessoaFisica" data-parent="#pessoas">
                <div class="card card-body">
                    @Html.LabelFor(model => model.CPF, "CPF:", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", placeholder = "000.000.000-00", @id = "cpf" } })
                    @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="collapse" id="pessoaJuridica" data-parent="#pessoas">
                <div class="card card-body">
                    <div class="row">
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.CNPJ)
                            @Html.EditorFor(model => model.CNPJ, new { htmlAttributes = new { @class = "form-control", placeholder = "00.000.000/0000-00", @id = "cnpj" } })
                            @Html.ValidationMessageFor(model => model.CNPJ, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.NomeEmpresa, "Nome da Empresa")
                            @Html.EditorFor(model => model.NomeEmpresa, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NomeEmpresa, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <hr />

        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Pais, "País")
                @Html.EditorFor(model => model.Enderecos.Pais, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Pais, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Estado)
                @Html.EditorFor(model => model.Enderecos.Estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Estado, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Cidade)
                @Html.EditorFor(model => model.Enderecos.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Cidade, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Bairro)
                @Html.EditorFor(model => model.Enderecos.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Bairro, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Rua, "Logradouro")
                @Html.EditorFor(model => model.Enderecos.Rua, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Rua, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Numero)
                @Html.EditorFor(model => model.Enderecos.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Numero, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Enderecos.Complemento)
                @Html.EditorFor(model => model.Enderecos.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enderecos.Complemento, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="row " style="display:none;">
            @{
                var data = DateTime.Now.ToString("yyyy-MM-dd");
                Random numAleatorio = new Random();
                int NConta = numAleatorio.Next();
            }
            <div class="col-md-4">
                @Html.LabelFor(model => model.Conta.NumeroDaConta)
                @Html.EditorFor(model => model.Conta.NumeroDaConta, new { htmlAttributes = new { @class = "form-control", @Value = NConta } })
                @Html.ValidationMessageFor(model => model.Conta.NumeroDaConta, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Conta.DataDaConta)
                @Html.EditorFor(model => model.Conta.DataDaConta, new { htmlAttributes = new { @class = "form-control", @Value = data } })
                @Html.ValidationMessageFor(model => model.Conta.DataDaConta, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Conta.Saldo)
                @Html.EditorFor(model => model.Conta.Saldo, new { htmlAttributes = new { @class = "form-control", @Value = 0 } })
                @Html.ValidationMessageFor(model => model.Conta.Saldo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" onclick="habilitar(this.checked)">
            <label class="form-check-label" for="flexCheckDefault">
                Você aceita os <a href="http://www.engeplus.com.br/noticia/videos-e-diversao/2006/as-piores-piadas-do-mundo">Termos e Condições</a>?
            </label>
            <br />
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salvar" class="btn btn-default" disabled id="salvar" />
                </div>
            </div>
            <hr />
        </div>
    </div>
    </form>

    <div>
        @Html.ActionLink("Voltar a Página de Login", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/inputmask")
    }


    <script type="text/javascript">
        function habilitar(selecionado) {
            if (selecionado == true)
                document.getElementById('salvar').disabled = false;
            else
                document.getElementById('salvar').disabled = true;
        }

    </script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.11/jquery.mask.min.js"></script>

    <script type="text/javascript">
        $("#ddd").mask("(00)");
        $("#telefone").mask("00000-0000");
        $("#cpf").mask("000.000.000-00");
        $("#data").mask("00/00/0000");
        $("#cnpj").mask("00.000.000/0000-00");
    </script>

    <script type="text/javascript" language="JavaScript">
<!--
        function comparaSenha(theForm) {
            if (theForm.Senha.value != theForm.confirmarSenha.value) {
                alert('A confirmação de senha deve ser igual a senha');
                return false;
            } else {
                return true;
            }
        }
    </script>
